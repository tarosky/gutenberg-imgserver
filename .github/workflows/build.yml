name: CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    - issue/*
    # - dev/harai

env:
  ACCESS_KEY_ID: AKIAQGFE5ESVOYCL2ANC
  AWS_ACCOUNT_ID: '013230744746'
  S3_BUCKET: gutenberg-modrepo-testbucket-66i59vgigq34
  GO_VERSION: 1.15.8

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^${{env.GO_VERSION}}'
    - run: echo "$ACCESS_KEY_ID" > config/test/access-key-id
    - run: echo "$AWS_ACCOUNT_ID" > config/test/aws-account-id
    - run: echo "$S3_BUCKET" > config/test/s3-bucket
    - run: echo "$TEST_AWS_SECRET_ACCESS_KEY" > config/test/secret-access-key
      env:
        TEST_AWS_SECRET_ACCESS_KEY: ${{secrets.TEST_AWS_SECRET_ACCESS_KEY}}
    - run: go build -o work/imgserver .
    - uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: work/imgserver

  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^${{env.GO_VERSION}}'
    - run: echo "$ACCESS_KEY_ID" > config/test/access-key-id
    - run: echo "$AWS_ACCOUNT_ID" > config/test/aws-account-id
    - run: echo "$S3_BUCKET" > config/test/s3-bucket
    - run: echo "$TEST_AWS_SECRET_ACCESS_KEY" > config/test/secret-access-key
      env:
        TEST_AWS_SECRET_ACCESS_KEY: ${{secrets.TEST_AWS_SECRET_ACCESS_KEY}}
    - run: go get -u github.com/jstemmer/go-junit-report
    - run: go test -v ./... 2>&1 | tee work/test.log
    - run: go-junit-report < work/test.log > work/report.xml
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        files: work/report.xml

  release:
    needs:
    - build
    - test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    env:
      BUCKET_NAME: gutenberg-modrepo-modulerepobucket-99uoevgdqlvw
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.GITHUB_TOKEN}}
        prefix: build_number_generator
    - name: Print new build number
      run: echo "Build number is $BUILD_NUMBER"
    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: build-${{env.BUILD_NUMBER}}
        release_name: Build ${{env.BUILD_NUMBER}}
        draft: false
        prerelease: false
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./imgserver
        asset_name: imgserver.build-${{env.BUILD_NUMBER}}-linux-amd64
        asset_content_type: application/octet-stream
